name: Release

on:
  push:
    branches:
    - test-actions

jobs:
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      CONTAINER_REPO: ghcr.io
      IMAGE_NAME: danjesensky/frogbot

    outputs:
      semanticVersion: ${{ steps.gitversion.outputs.majorMinorPatch }}
      containerRepoImage: ${{ env.GHCR }}/${{ env.IMAGE_NAME }}:${{ steps.gitversion.outputs.nuGetVersionV2 }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'

    # Setup Node.js for GitVersion
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.10
      with:
        versionSpec: '5.x'

    - name: Restore packages
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -o .artifacts/ -c release

    - name: Tests
      run: dotnet test --no-build

    - name: Build Images
      env:
        BUILD_URL: https://github.com/${{ env.GITHUB_REPOSITORY }}/actions/runs/${{ env.GITHUB_RUN_ID }}
        VERSION: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      run: |
        BUILD_DATE=$(date -u "+%Y-%m-%dT%H:%M:%S")
        docker build . --build-arg BUILD_DATE=$BUILD_DATE \
          --build-arg COMMIT_SHA=${{ env.GITHUB_SHA }} --build-arg BUILD_URL=$BUILD_URL \
          -t "${{ env.CONTAINER_REPO }}/${{ env.IMAGE_NAME }}:latest"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.CONTAINER_REPO }}
        username: ${{ github.actor }}
        password: ${{ secrets.CR_ACCESS_TOKEN }}

    - name: Push to Container Repository
      run: docker push ghcr.io/danjesensky/frogbot:latest

    - name: Restart Service via SSH
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: $ {{ secrets.SSH_KEY }}
        script: systemctl --user restart frogbot.service